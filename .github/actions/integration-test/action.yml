# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

name: Integration test
description: Run the integration tests against a single version of k8s and Openbao
inputs:
  k8s-version:
    description: 'Kubernetes version to use for the kind cluster'
    required: true
  version:
    description: 'Openbao K8s version to use for the tests'
    required: true
  openbao-version:
    description: 'Openbao version to use for the tests'
    required: true
  tarball-file:
    description: 'Name of the tarball file artifact to download'
    required: true
  kind-cluster-name:
    description: 'Name of the kind cluster to create and test against'
    default: 'openbao-k8s'
  bats-version:
    description: 'Version of bats to run tests with'
    default: '1.12.0'
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
    - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
    - run: sudo npm install -g bats@${{ inputs.bats-version }}
      shell: bash
    - run: bats -v
      shell: bash

    - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
      with:
        python-version: '3.10'
    - run: pip install yq
      shell: bash

    # Checkout this repo.
    - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
      with:
        path: "openbao-k8s"

    # Checkout openbao-helm for acceptance test code.
    - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
      with:
        repository: "openbao/openbao-helm"
        ref: "openbao-0.16.1"
        path: "openbao-helm"

    - name: Create Kind Cluster
      uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
      with:
        cluster_name: ${{ inputs.kind-cluster-name }}
        config: openbao-helm/test/kind/config.yaml
        node_image: kindest/node:v${{ inputs.k8s-version }}
        version: "v0.29.0"

    - name: Create kind export log root
      id: create_kind_export_log_root
      shell: bash
      run: |
        log_artifact_name="kind-${{ inputs.kind-cluster-name }}-$(git rev-parse --short ${{ github.sha }})-${{ inputs.k8s-version }}-${{ inputs.openbao-version }}-helm-logs"
        log_root="/tmp/${log_artifact_name}"
        mkdir -p "${log_root}"
        echo "log_root=${log_root}" >> $GITHUB_OUTPUT
        echo "log_artifact_name=${log_artifact_name}" >> $GITHUB_OUTPUT

    - uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
      with:
        name: ${{ inputs.tarball-file }}

    - name: Load openbao-k8s ${{ inputs.version }} image
      shell: bash
      run: |
        [ -n "${{ inputs.tarball-file }}" ] || (echo "inputs.tarball-file not set" >&2 ; exit 1)
        docker image load --input "${{ inputs.tarball-file }}"
        kind load docker-image --name ${{ inputs.kind-cluster-name }} openbao/openbao-k8s:"${{ inputs.version }}"

    - name: Makefile tests
      shell: bash
      working-directory: openbao-k8s
      run: make deploy exercise teardown VERSION="${{ inputs.version }}" OPENBAO_VERSION="${{ inputs.openbao-version }}"

    - name: bats tests
      shell: bash
      working-directory: openbao-helm
      run: |
        # assumes Python based yq :(
        yq --in-place --yaml-roundtrip '.injector.image.tag |= "${{ inputs.version }}"' ./values.yaml
        yq --in-place --yaml-roundtrip '.server.image.tag |= "${{ inputs.openbao-version }}"' ./values.yaml
        yq --in-place --yaml-roundtrip '.injector.agentImage.tag |= "${{ inputs.openbao-version }}"' ./values.yaml
        bats ./test/acceptance -t --filter injector

    - name: export kind cluster logs
      if: always()
      shell: bash
      run: |
       kind export logs --name ${{ inputs.kind-cluster-name }} ${{ steps.create_kind_export_log_root.outputs.log_root }}

    - name: Store kind cluster logs
      if: success()
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: ${{ steps.create_kind_export_log_root.outputs.log_artifact_name }}
        path: ${{ steps.create_kind_export_log_root.outputs.log_root }}

    - name: Store kind cluster logs failure
      if: failure()
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: ${{ steps.create_kind_export_log_root.outputs.log_artifact_name }}-failed
        path: ${{ steps.create_kind_export_log_root.outputs.log_root }}
